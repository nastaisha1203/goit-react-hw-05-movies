{"version":3,"file":"static/js/785.bfb14100.chunk.js","mappings":"gMAEaA,E,QAAYC,GAAAA,IAAH,sE,SCCTC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,QACNC,UAAU,gBACVC,SAAS,KAIhB,C,0HC6BD,UAxCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,oGAEbF,GAAa,GACbF,EAAS,MAHI,UAIQK,EAAAA,EAAAA,IAAaX,GAJrB,OAIPY,EAJO,OAKbR,EAAWQ,GALE,gDAObN,EAAS,EAAD,IAPK,yBASbE,GAAa,GATA,4EAAH,qDAYdE,GACD,GAAE,CAACV,KAEF,2BACGO,IAAa,SAAC,IAAD,IACbF,IAAS,6DACV,wBACsB,IAAnBF,EAAQU,QACP,oEAEAV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADC,QAUrB,C,mMC3CKG,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAa,mCAAG,wGACJD,EAAAA,EAAAA,IAAA,wCAA2CD,IADvC,uBACnBG,EADmB,EACnBA,KACFT,EAASS,EAAKC,QAAQR,KAAI,kBAAiC,CAC/DC,GAD8B,EAAGA,GAEjCQ,MAF8B,EAAOA,MAGrCC,YAH8B,EAAcA,YAAd,IAFL,kBAOpBZ,GAPoB,2CAAH,qDAUba,EAAa,mCAAG,WAAMV,GAAN,yFACJI,EAAAA,EAAAA,IAAA,mBACTJ,EADS,oBACKG,EADL,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAW,mCAAG,WAAMC,GAAN,2FACFR,EAAAA,EAAAA,IAAA,kCACMD,EADN,iCACsCS,EADtC,gCADE,uBACjBN,EADiB,EACjBA,KAGFT,EAASS,EAAKC,QAAQR,KAAI,kBAAiC,CAC/DC,GAD8B,EAAGA,GAEjCQ,MAF8B,EAAOA,MAGrCC,YAH8B,EAAcA,YAAd,IAJP,kBASlBZ,GATkB,2CAAH,sDAYXgB,EAAY,mCAAG,WAAMb,GAAN,2FACHI,EAAAA,EAAAA,IAAA,mBACTJ,EADS,4BACaG,EADb,oBADG,uBAClBG,EADkB,EAClBA,KAGFT,EAASS,EAAKQ,KAAKf,KAAI,kBAA4C,CACvEC,GAD2B,EAAGA,GAE9Be,KAF2B,EAAOA,KAGlCC,aAH2B,EAAaA,aAIxCC,UAJ2B,EAA2BA,UAA3B,IAJH,kBAUnBpB,GAVmB,2CAAH,sDAaZD,EAAY,mCAAG,WAAMI,GAAN,2FACHI,EAAAA,EAAAA,IAAA,mBACTJ,EADS,4BACaG,EADb,2BADG,uBAClBG,EADkB,EAClBA,KAGFT,EAASS,EAAKC,QAAQR,KAAI,kBAA8B,CAC5DC,GAD8B,EAAGA,GAEjCE,QAF8B,EAAOA,QAGrCD,OAH8B,EAAgBA,OAAhB,IAJN,kBASnBJ,GATmB,2CAAH,qD","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Watch } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Container>\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"brown\"\n        ariaLabel=\"watch-loading\"\n        visible={true}\n      />\n    </Container>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const result = await fetchReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchApi();\n  }, [movieId]);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong. Try again.</p>}\n      <ul>\n        {reviews.length === 0 ? (\n          <p>We don't have any reviews for this movie</p>\n        ) : (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '8443d03a0ecd905c6120abf16379f6a7';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  const result = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path,\n  }));\n  return result;\n};\n\nexport const fetchMoviesId = async id => {\n  const { data } = await axios.get(\n    `/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchSearch = async query => {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const result = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path,\n  }));\n  return result;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await axios.get(\n    `/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const result = data.cast.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    profile_path,\n    character,\n  }));\n  return result;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const result = data.results.map(({ id, content, author }) => ({\n    id,\n    content,\n    author,\n  }));\n  return result;\n};\n"],"names":["Container","styled","Loader","height","width","radius","color","ariaLabel","visible","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","fetchApi","fetchReviews","result","length","map","id","author","content","API_KEY","axios","fetchTrending","data","results","title","poster_path","fetchMoviesId","fetchSearch","query","fetchCredits","cast","name","profile_path","character"],"sourceRoot":""}