{"version":3,"file":"static/js/541.22049c3e.chunk.js","mappings":"0OAoDA,UA/Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAa,GACbF,EAAS,MAHK,UAIOK,EAAAA,EAAAA,IAAaX,GAJpB,OAIRY,EAJQ,OAKdR,EAAQQ,GALM,gDAOdN,EAAS,EAAD,IAPM,yBASdE,GAAa,GATC,4EAAH,qDAYfE,GACD,GAAE,CAACV,KAGF,2BACGO,IAAa,SAAC,IAAD,IACbF,IAAS,6DACV,wBACGF,GACCA,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,2BACE,gBACEC,IACmB,OAAjBF,EACI,sCADJ,0CAEuCA,GAEzCG,IAAKJ,EACLK,MAAO,OAET,uBAAIL,KACJ,uCAAeE,OAXRH,EADF,QAkBlB,C,gFCjDYO,E,QAAYC,GAAAA,IAAH,sE,SCCTC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPJ,MAAM,KACNK,OAAO,KACPC,MAAM,QACNC,UAAU,gBACVC,SAAS,KAIhB,C,mMCfKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAa,mCAAG,wGACJD,EAAAA,EAAAA,IAAA,wCAA2CD,IADvC,uBACnBG,EADmB,EACnBA,KACFpB,EAASoB,EAAKC,QAAQpB,KAAI,kBAAiC,CAC/DC,GAD8B,EAAGA,GAEjCoB,MAF8B,EAAOA,MAGrCC,YAH8B,EAAcA,YAAd,IAFL,kBAOpBvB,GAPoB,2CAAH,qDAUbwB,EAAa,mCAAG,WAAMtB,GAAN,yFACJgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,oBACKe,EADL,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAW,mCAAG,WAAMC,GAAN,2FACFR,EAAAA,EAAAA,IAAA,kCACMD,EADN,iCACsCS,EADtC,gCADE,uBACjBN,EADiB,EACjBA,KAGFpB,EAASoB,EAAKC,QAAQpB,KAAI,kBAAiC,CAC/DC,GAD8B,EAAGA,GAEjCoB,MAF8B,EAAOA,MAGrCC,YAH8B,EAAcA,YAAd,IAJP,kBASlBvB,GATkB,2CAAH,sDAYXD,EAAY,mCAAG,WAAMG,GAAN,2FACHgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,4BACae,EADb,oBADG,uBAClBG,EADkB,EAClBA,KAGFpB,EAASoB,EAAK7B,KAAKU,KAAI,kBAA4C,CACvEC,GAD2B,EAAGA,GAE9BC,KAF2B,EAAOA,KAGlCC,aAH2B,EAAaA,aAIxCC,UAJ2B,EAA2BA,UAA3B,IAJH,kBAUnBL,GAVmB,2CAAH,sDAaZ2B,EAAY,mCAAG,WAAMzB,GAAN,2FACHgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,4BACae,EADb,2BADG,uBAClBG,EADkB,EAClBA,KAGFpB,EAASoB,EAAKC,QAAQpB,KAAI,kBAA8B,CAC5DC,GAD8B,EAAGA,GAEjC0B,QAF8B,EAAOA,QAGrCC,OAH8B,EAAgBA,OAAhB,IAJN,kBASnB7B,GATmB,2CAAH,qD","sources":["components/Cast/Cast.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","services/api.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const result = await fetchCredits(movieId);\n        setCast(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong. Try again.</p>}\n      <ul>\n        {cast &&\n          cast.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path === null\n                    ? 'https://via.placeholder.com/200x300'\n                    : `https://image.tmdb.org/t/p/w500/${profile_path}`\n                }\n                alt={name}\n                width={100}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Watch } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Container>\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"brown\"\n        ariaLabel=\"watch-loading\"\n        visible={true}\n      />\n    </Container>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '8443d03a0ecd905c6120abf16379f6a7';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  const result = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path,\n  }));\n  return result;\n};\n\nexport const fetchMoviesId = async id => {\n  const { data } = await axios.get(\n    `/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchSearch = async query => {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const result = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path,\n  }));\n  return result;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await axios.get(\n    `/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const result = data.cast.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    profile_path,\n    character,\n  }));\n  return result;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const result = data.results.map(({ id, content, author }) => ({\n    id,\n    content,\n    author,\n  }));\n  return result;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchCast","fetchCredits","result","map","id","name","profile_path","character","src","alt","width","Container","styled","Loader","height","radius","color","ariaLabel","visible","API_KEY","axios","fetchTrending","data","results","title","poster_path","fetchMoviesId","fetchSearch","query","fetchReviews","content","author"],"sourceRoot":""}